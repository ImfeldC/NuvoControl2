<?xml version="1.0"?>

<!-- 
XSLT  for generating build  summary reports for CCNet Dashboard from unit test report generated by MSTest utility (V9.0.21022.8)
Author: Chamindu R. Munasinghe (cmunasinghe@gmail.com) 
Based on the original XSL distributed with ccnet.
-->

<xsl:stylesheet
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:tt="http://microsoft.com/schemas/VisualStudio/TeamTest/2006" version="1.0">

  <xsl:output method="html"/>

  <xsl:template match="cruisecontrol">
    <xsl:for-each select="build">
      <xsl:apply-templates select="tt:TestRun"/>
    </xsl:for-each>
  </xsl:template>
  <xsl:template match="tt:TestRun">
    <xsl:variable name="pass_count" select="tt:ResultSummary/tt:Counters/@passed"/>

    <xsl:variable name="inconclusive_count" select="tt:ResultSummary/tt:Counters/@inconclusive"/>
    <xsl:variable name="failed_count" select="tt:ResultSummary/tt:Counters/@failed"/>
    <xsl:variable name="total_count" select="tt:ResultSummary/tt:Counters/@total"/>
    <xsl:if test="$total_count != 0">
      <table class="section-table" cellpadding="2" cellspacing="0" border="0" width="98%">
        <tr>
          <td class="sectionheader">
            Tests run: <xsl:value-of select="$total_count"/>
            Failures: <xsl:value-of select="$failed_count" />
            Inconclusive: <xsl:value-of select="$inconclusive_count" />
          </td>
        </tr>
        <xsl:choose>
          <xsl:when test="$total_count = $pass_count">
            <tr>
              <td class="section-data">All tests passed.</td>
            </tr>
          </xsl:when>
          <xsl:otherwise>
            <tr>
              <td>
                <table border="1" width="100%" frame="box">
                  <tr bgcolor="#2288FF">
                    <th align="center" width="40">Test Name</th>
                    <th align="left">Outcome</th>
                    <th align="left">Duration</th>
                    <th align="left">Message</th>
                    <th align="left">Stack Trace</th>
                  </tr>
                  <xsl:apply-templates select="/tt:Results/tt:UnitTestResult[@outcome!= 'Passed']" />
                </table>
              </td>
            </tr>
          </xsl:otherwise>
        </xsl:choose>
      </table>
    </xsl:if>
  </xsl:template>

  <xsl:template match="tt:UnitTestResult">
    <xsl:variable name="BgColor">
      <xsl:choose>
        <xsl:when test="@outcome = 'Passed'">#00FF33</xsl:when>
        <xsl:when test="@outcome = 'Failed'">red</xsl:when>
        <xsl:when test="@outcome = 'Inconclusive'">#FFCC00</xsl:when>
        <xsl:otherwise>#3399FF</xsl:otherwise>
      </xsl:choose>
    </xsl:variable>

    <tr>
      <xsl:attribute name="bgcolor">
        <xsl:value-of select="$BgColor"/>
      </xsl:attribute>
      <td>
        <xsl:value-of select="@testName"/>
      </td>
      <td>
        <xsl:value-of select="@outcome"/>
      </td>
      <td>
        <xsl:value-of select="@duration"/>
      </td>
      <td>
        <xsl:value-of select="tt:Output/tt:ErrorInfo/tt:Message"/>
      </td>
      <td>
        <xsl:value-of select="tt:Output/tt:ErrorInfo/tt:StackTrace"/>
      </td>
    </tr>
  </xsl:template>
</xsl:stylesheet>
